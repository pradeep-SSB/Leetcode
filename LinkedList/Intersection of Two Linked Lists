**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode tempA = headA;
        ListNode tempB = headB;
        int lenA = 0;
        int lenB = 0;
        
        while(tempA != null){
            tempA = tempA.next;
            lenA++;
        }
        while(tempB != null){
            tempB = tempB.next;
            lenB++;  
        }
        int diff = Math.abs(lenA - lenB);
        // System.out.print(diff);
        tempA = headA;
        tempB = headB;
        
        if(lenA > lenB){
            while(diff-- > 0){
                tempA = tempA.next;
            }
        }
        else{
            while(diff-- > 0){
                tempB = tempB.next;
            }
        }
    
        while(tempA != tempB){
            tempA = tempA.next;
            tempB = tempB.next;
            if(tempA == null || tempB == null)
                return null;
        }
        
        return tempA;
        
    }
}
